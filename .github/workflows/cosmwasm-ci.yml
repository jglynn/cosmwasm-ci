name: cosmwasm-build-pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-scan-audit:
    name: Build, Test, Scan, Audit, Sign

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache
      id: cache-rust
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-    
  
    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.69.0
      with:
        target: wasm32-unknown-unknown
        components: clippy
    
    - name: Install Tools
      run: | 
        cargo install cosmwasm-check --version 1.4.1 --locked || true
        cargo install cargo-llvm-cov --version 0.5.35 --locked || true
        cargo install cargo-sbom --version 0.8.4 --locked || true
        cargo install cargo-sonar --version 0.21.0 --locked || true

    - name: Build
      run: |
        RUSTFLAGS='-C link-arg=-s' cargo wasm
        cosmwasm-check target/wasm32-unknown-unknown/release/cw_escrow.wasm

    - name: Test
      run: |
        cargo test
        cargo llvm-cov --html 
        cargo llvm-cov report --lcov --output-path target/lcov.info

    - name: Inspect
      run: |
        # cargo fmt --all -- --check
        cargo clippy --version
        cargo clippy --message-format=json > target/clippy-report.json
        cargo sonar --clippy-path target/clippy-report.json
        mv sonar-issues.json target/sonar-issues.json

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: test-coverage
        path: target/llvm-cov/html

    - name: Scan
      run: | 
        cargo audit
        cargo sbom --output-format cyclone_dx_json_1_4 > target/cdx-sbom.json

    - name: Assemble
      uses: montudor/action-zip@v1
      with:
          args: zip -qq -r target/artifacts.zip target/lcov.info target/sonar-issues.json target/cdx-sbom.json target/wasm32-unknown-unknown/release/cw_escrow.wasm

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: 0.11.0-${{ github.ref }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
    
    - name: Upload Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/target/artifacts.zip
        asset_name: artifacts.zip
        asset_content_type: application/gzip